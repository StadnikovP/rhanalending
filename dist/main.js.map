{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["var $window, $document, $html;\r\n\r\nvar pageApp = {\r\n    'init': function(){\r\n        var $thisApp = $('#app');\r\n        var curApp = $thisApp.attr('data-app');\r\n        this.globalPollifil();\r\n        if (pageApp[curApp]) { pageApp[curApp]($thisApp); }\r\n    },\r\n    'globalPollifil': function(){\r\n        if (!('classList' in document.documentElement) && Object.defineProperty && typeof HTMLElement !== 'undefined') {\r\n            Object.defineProperty(HTMLElement.prototype, 'classList', {\r\n                get: function() {\r\n                    var self = this;\r\n\r\n                    function update(fn) {\r\n                        return function(value) {\r\n                            var classes = self.className.split(/\\s+/);\r\n                            var index = classes.indexOf(value);\r\n\r\n                            fn(classes, index, value);\r\n                            self.className = classes.join(' ');\r\n                        };\r\n                    }\r\n\r\n                    var ret = {\r\n                        add: update(function(classes, index, value) {\r\n                            ~index || classes.push(value);\r\n                        }),\r\n\r\n                        remove: update(function(classes, index) {\r\n                            ~index && classes.splice(index, 1);\r\n                        }),\r\n\r\n                        toggle: update(function(classes, index, value) {\r\n                            ~index ? classes.splice(index, 1) : classes.push(value);\r\n                        }),\r\n\r\n                        contains: function(value) {\r\n                            return !!~self.className.split(/\\s+/).indexOf(value);\r\n                        },\r\n\r\n                        item: function(i) {\r\n                            return self.className.split(/\\s+/)[i] || null;\r\n                        }\r\n                    };\r\n\r\n                    Object.defineProperty(ret, 'length', {\r\n                        get: function() {\r\n                            return self.className.split(/\\s+/).length;\r\n                        }\r\n                    });\r\n\r\n                    return ret;\r\n                }\r\n            });\r\n        }\r\n\r\n        (function() {\r\n            var lastTime = 0;\r\n            var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n            for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n                window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\r\n                window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\r\n                    || window[vendors[x]+'CancelRequestAnimationFrame'];\r\n            }\r\n\r\n            if (!window.requestAnimationFrame)\r\n                window.requestAnimationFrame = function(callback, element) {\r\n                    var currTime = new Date().getTime();\r\n                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n                    var id = window.setTimeout(function() { callback(currTime + timeToCall); },\r\n                        timeToCall);\r\n                    lastTime = currTime + timeToCall;\r\n                    return id;\r\n                };\r\n\r\n            if (!window.cancelAnimationFrame)\r\n                window.cancelAnimationFrame = function(id) {\r\n                    clearTimeout(id);\r\n                };\r\n        }());\r\n    },\r\n};\r\n\r\nvar moduleApp = {\r\n    'init': function () {\r\n        this.firstScreenAnimation();\r\n        this.animationInview();\r\n        this.clickReedText();\r\n        this.navigationScroll();\r\n        this.videoBg();\r\n        this.menuButton();\r\n        this.swiperPress();\r\n    },\r\n    'firstScreenAnimation': function(){\r\n\r\n        $('.header-wrapper').addClass('active');\r\n        $('.js-video').attr('autoplay', 'true');\r\n    },\r\n    'animationInview': function(){\r\n        //one or on\r\n        $('.js-animation-view').on('inview', function(event, isInView) {\r\n            if (isInView) {\r\n                $(this).addClass('active');\r\n                // element is now visible in the viewport\r\n            } else {\r\n                // element has gone out of viewport\r\n            }\r\n        });\r\n    },\r\n    'clickReedText': function(){\r\n        $('.js-pseudo-link').on('click', function(e){\r\n            e.preventDefault();\r\n            var $this = $(this);\r\n            var $parent = $this.parents('.element-reed-text');\r\n            var $wrapper = $parent.find('.js-wrapper-text');\r\n            var heightText = $parent.find('.inner-content').height();\r\n\r\n            if(!$this.hasClass('active')){\r\n                // if(heightText > $wrapper.height){\r\n                    $wrapper.css('height', heightText)\r\n                // }\r\n\r\n                $this.addClass('active');\r\n                $this.html('Свернуть');\r\n            }\r\n            else{\r\n                $this.removeClass('active');\r\n                $this.html('Читать еще');\r\n                $wrapper.css('height', $wrapper.attr('data-height'));\r\n            }\r\n\r\n\r\n\r\n        });\r\n    },\r\n    'videoBg': function(){\r\n\r\n        $('#video').YTPlayer({\r\n            fitToBackground: true,\r\n            videoId: 'slsSrYlhLLs',\r\n            pauseOnScroll: false,\r\n            playerVars: {\r\n                autohide: 1,\r\n                loop: 1,\r\n                playlist: 'slsSrYlhLLs',\r\n                modestbranding: 0,\r\n                rel: 0,\r\n                showinfo: 0,\r\n                controls: 0,\r\n                disablekb: 1,\r\n                enablejsapi: 0,\r\n                iv_load_policy: 3\r\n            },\r\n            events: {\r\n                'onStateChange': initVideo,\r\n            }\r\n        });\r\n\r\n        function initVideo(){\r\n            $('#video').addClass('active');\r\n\r\n        }\r\n    },\r\n    'navigationScroll': function(){\r\n        $('.js-link-nav').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            console.log('click');\r\n            var $this = $(this),\r\n                url = $this.attr('href'),\r\n                $section = $(url),\r\n                topPositionSection = $section.offset().top;\r\n\r\n            $('html,body').animate({'scrollTop': topPositionSection}, 500);\r\n\r\n            setTimeout(function () {\r\n                $('.mobile-nav-bar').removeClass('active');\r\n                $('.js-m-btn-menu').removeClass('active');\r\n            },500);\r\n\r\n        });\r\n    },\r\n    'menuButton': function(){\r\n        $('.js-m-btn-menu').on('click', function () {\r\n            $(this).toggleClass('active');\r\n            $('.mobile-nav-bar').toggleClass('active');\r\n            // $('body').toggleClass('open-menu');\r\n        });\r\n    },\r\n    'swiperPress': function(){\r\n        let configPress = {\r\n            slidesPerView: 'auto',\r\n            spaceBetween: 80,\r\n            pagination: {\r\n                el: '.swiper-pagination',\r\n                clickable: true,\r\n            },\r\n            breakpoints:{\r\n                480: {\r\n                    slidesPerView: 1,\r\n                    spaceBetween: 0\r\n                }\r\n            }\r\n        };\r\n\r\n        let mySwiper = new Swiper('.js-slider-press', configPress);\r\n    }\r\n};\r\n\r\n\r\n\r\n$(document).ready(function(){\r\n    // init globals\r\n    $window = $(window);\r\n    $document = $(document);\r\n    $html = $('html');\r\n\r\n    pageApp.init();\r\n    moduleApp.init();\r\n});"],"file":"main.js"}